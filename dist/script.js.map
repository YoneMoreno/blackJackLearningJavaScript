{"version":3,"sources":["../script.js"],"names":["textArea","document","getElementById","newGameButton","hitButton","stayButton","gameStarted","gameOver","playerWon","dealerCards","playerCards","dealerScore","playerScore","deck","style","display","showStatus","addEventListener","createDeck","shuffleDeck","getNextCard","push","checkForEndOfGame","updateScores","suits","values","suitIndex","length","valueIndex","card","suit","value","shift","getCardString","getScore","cardArray","score","hasAce","i","getCardNumericValue","innerText","dealerCardString","playerCardString","swapIndex","Math","trunc","random","randomCard","currentCard"],"mappings":";;AAAA;;;AAGA,IAAIA,WAAWC,SAASC,cAAT,CAAwB,WAAxB,CAAf;AACA,IAAIC,gBAAgBF,SAASC,cAAT,CAAwB,iBAAxB,CAApB;AACA,IAAIE,YAAYH,SAASC,cAAT,CAAwB,YAAxB,CAAhB;AACA,IAAIG,aAAaJ,SAASC,cAAT,CAAwB,aAAxB,CAAjB;;AAEA,IAAII,cAAc,KAAlB;AAAA,IACIC,WAAW,KADf;AAAA,IAEIC,YAAY,KAFhB;AAAA,IAGIC,cAAc,EAHlB;AAAA,IAIIC,cAAc,EAJlB;AAAA,IAKIC,cAAc,CALlB;AAAA,IAMIC,cAAc,CANlB;AAAA,IAOIC,OAAO,EAPX;;AASAT,UAAUU,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AACAV,WAAWS,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACAC;;AAGAb,cAAcc,gBAAd,CAA+B,OAA/B,EAAwC,YAAW;;AAE/CX,kBAAc,IAAd;AACAC,eAAW,KAAX;AACAC,gBAAY,KAAZ;;AAEAK,WAAOK,YAAP;AACAC,gBAAYN,IAAZ;AACAJ,kBAAc,CAACW,aAAD,EAAgBA,aAAhB,CAAd;AACAV,kBAAc,CAACU,aAAD,EAAgBA,aAAhB,CAAd;;AAGAjB,kBAAcW,KAAd,CAAoBC,OAApB,GAA8B,MAA9B;AACAX,cAAUU,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AACAV,eAAWS,KAAX,CAAiBC,OAAjB,GAA2B,QAA3B;AACAC;AACH,CAhBD;;AAkBAZ,UAAUa,gBAAV,CAA2B,OAA3B,EAAoC,YAAU;AAC1CP,gBAAYW,IAAZ,CAAiBD,aAAjB;AACAE;AACAN;AACH,CAJD;;AAMAX,WAAWY,gBAAX,CAA4B,OAA5B,EAAqC,YAAU;AAC3CV,eAAW,IAAX;AACAe;AACAN;AACH,CAJD;;AAMA,SAASM,iBAAT,GAA4B;;AAGxBC;;AAEA,QAAGhB,QAAH,EAAY;AACR,eAAMI,cAAcC,WAAd,IACHA,eAAe,EADZ,IAEHD,eAAe,EAFlB,EAEqB;AACjBF,wBAAYY,IAAZ,CAAiBD,aAAjB;AACAG;AACH;AACJ;;AAED,QAAGX,cAAc,EAAjB,EAAoB;AAChBJ,oBAAY,KAAZ;AACAD,mBAAW,IAAX;AACH,KAHD,MAGM,IAAII,cAAc,EAAlB,EAAqB;AACvBH,oBAAY,IAAZ;AACAD,mBAAW,IAAX;AACH,KAHK,MAGA,IAAKA,QAAL,EAAc;;AAEhB,YAAGK,cAAcD,WAAjB,EAA6B;AACzBH,wBAAY,IAAZ;AACH,SAFD,MAEK;AACDA,wBAAY,KAAZ;AACH;AACJ;AACJ;;AAED,IAAIgB,QAAQ,CAAC,QAAD,EAAW,OAAX,EAAoB,UAApB,EAAgC,QAAhC,CAAZ;AACA,IAAIC,SAAS,CAAC,IAAD,EAAO,MAAP,EAAe,OAAf,EAAwB,MAAxB,EACT,KADS,EACF,MADE,EACM,OADN,EACe,OADf,EACwB,KADxB,EAET,MAFS,EAED,MAFC,EAEO,OAFP,EAEgB,KAFhB,CAAb;;AAOA,SAASP,UAAT,GAAsB;AAClB,QAAIL,OAAO,EAAX;AACA,SAAKa,YAAY,CAAjB,EAAoBA,YAAYF,MAAMG,MAAtC,EAA8CD,WAA9C,EAA2D;AACvD,aAAK,IAAIE,aAAa,CAAtB,EAAyBA,aAAaH,OAAOE,MAA7C,EAAqDC,YAArD,EAAmE;AAC/D,gBAAIC,OAAO;AACPC,sBAAMN,MAAME,SAAN,CADC;AAEPK,uBAAON,OAAOG,UAAP;AAFA,aAAX;AAIAf,iBAAKQ,IAAL,CAAUQ,IAAV;AACH;AACJ;AACD,WAAOhB,IAAP;AACH;;AAID,SAASO,WAAT,GAAuB;AACnB,WAAOP,KAAKmB,KAAL,EAAP;AACH;;AAED,SAASC,aAAT,CAAuBJ,IAAvB,EAA6B;AACzB,WAAOA,KAAKE,KAAL,GAAa,MAAb,GAAsBF,KAAKC,IAAlC;AACH;;AAED,SAASP,YAAT,GAAuB;AACnBZ,kBAAcuB,SAASzB,WAAT,CAAd;AACAG,kBAAcsB,SAASxB,WAAT,CAAd;AACH;;AAED,SAASwB,QAAT,CAAkBC,SAAlB,EAA4B;AACxB,QAAIC,QAAQ,CAAZ;AACA,QAAIC,SAAS,KAAb;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,UAAUR,MAA9B,EAAsCW,GAAtC,EAA0C;AACtC,YAAIT,OAAOM,UAAUG,CAAV,CAAX;AACAF,iBAASG,oBAAoBV,IAApB,CAAT;AACA,YAAGA,KAAKE,KAAL,KAAe,KAAlB,EAAwB;AACpBM,qBAAS,IAAT;AACH;AACJ;AACD,QAAGA,UAAUD,QAAQ,EAAR,IAAc,EAA3B,EAA8B;AAC1B,eAAOA,QAAQ,EAAf;AACH;AACD,WAAOA,KAAP;AACH;;AAED,SAASG,mBAAT,CAA6BV,IAA7B,EAAkC;AAC9B,YAAOA,KAAKE,KAAZ;AACI,aAAK,KAAL;AACI,mBAAO,CAAP;AACJ,aAAK,KAAL;AACI,mBAAO,CAAP;AACJ,aAAK,OAAL;AACI,mBAAO,CAAP;AACJ,aAAK,MAAL;AACI,mBAAO,CAAP;AACJ,aAAK,MAAL;AACI,mBAAO,CAAP;AACJ,aAAK,KAAL;AACI,mBAAO,CAAP;AACJ,aAAK,OAAL;AACI,mBAAO,CAAP;AACJ,aAAK,OAAL;AACI,mBAAO,CAAP;AACJ,aAAK,MAAL;AACI,mBAAO,CAAP;AACJ;AACI,mBAAO,EAAP;AApBR;AAuBH;;AAED,SAASf,UAAT,GAAsB;AAClB,QAAI,CAACV,WAAL,EAAkB;AACdN,iBAASwC,SAAT,GAAqB,gCAArB;AACA;AACH;AACD,QAAIC,mBAAmB,EAAvB;AACA,SAAI,IAAIH,IAAE,CAAV,EAAaA,IAAE7B,YAAYkB,MAA3B,EAAmCW,GAAnC,EAAuC;AACnCG,4BAAoBR,cAAcxB,YAAY6B,CAAZ,CAAd,IAAgC,IAApD;AACH;;AAED,QAAII,mBAAmB,EAAvB;AACA,SAAK,IAAIJ,KAAI,CAAb,EAAgBA,KAAE5B,YAAYiB,MAA9B,EAAsCW,IAAtC,EAA0C;AACtCI,4BAAoBT,cAAcvB,YAAY4B,EAAZ,CAAd,IAAgC,IAApD;AACH;;AAEDf;;AAEAvB,aAASwC,SAAT,GACI,kBACAC,gBADA,GAEA,UAFA,GAEa9B,WAFb,GAE2B,OAF3B,GAIA,eAJA,GAKA+B,gBALA,GAMA,UANA,GAMa9B,WANb,GAM2B,OAP/B;;AASA,QAAGL,QAAH,EAAY;AACR,YAAGC,SAAH,EAAa;AACTR,qBAASwC,SAAT,IAAsB,SAAtB;AACH,SAFD,MAEK;AACDxC,qBAASwC,SAAT,IAAsB,aAAtB;AACH;AACDrC,sBAAcW,KAAd,CAAoBC,OAApB,GAA8B,QAA9B;AACAX,kBAAUU,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AACAV,mBAAWS,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACH;AACJ;;AAID,SAASI,WAAT,CAAqBN,IAArB,EAA2B;AACvB,SAAK,IAAIyB,IAAI,CAAb,EAAgBA,IAAIzB,KAAKc,MAAzB,EAAiCW,GAAjC,EAAsC;AAClC,YAAIK,YAAYC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBjC,KAAKc,MAAhC,CAAhB;AACA,YAAIoB,aAAalC,KAAK8B,SAAL,CAAjB;AACA,YAAIK,cAAcnC,KAAKyB,CAAL,CAAlB;AACAzB,aAAK8B,SAAL,IAAkBK,WAAlB;AACAnC,aAAKyB,CAAL,IAAUS,UAAV;AACH;AACJ","file":"script.js","sourcesContent":["// Blackjack\r\n\r\n\r\nlet textArea = document.getElementById('text-area');\r\nlet newGameButton = document.getElementById('new-game-button');\r\nlet hitButton = document.getElementById('hit-button');\r\nlet stayButton = document.getElementById('stay-button');\r\n\r\nlet gameStarted = false,\r\n    gameOver = false,\r\n    playerWon = false,\r\n    dealerCards = [],\r\n    playerCards = [],\r\n    dealerScore = 0,\r\n    playerScore = 0,\r\n    deck = [];\r\n\r\nhitButton.style.display = 'none';\r\nstayButton.style.display = 'none';\r\nshowStatus();\r\n\r\n\r\nnewGameButton.addEventListener('click', function() {\r\n\r\n    gameStarted = true;\r\n    gameOver = false;\r\n    playerWon = false;\r\n\r\n    deck = createDeck();\r\n    shuffleDeck(deck);\r\n    dealerCards = [getNextCard(), getNextCard()];\r\n    playerCards = [getNextCard(), getNextCard()];\r\n\r\n\r\n    newGameButton.style.display = 'none';\r\n    hitButton.style.display = 'inline';\r\n    stayButton.style.display = 'inline';\r\n    showStatus();\r\n});\r\n\r\nhitButton.addEventListener('click', function(){\r\n    playerCards.push(getNextCard());\r\n    checkForEndOfGame();\r\n    showStatus();\r\n})\r\n\r\nstayButton.addEventListener('click', function(){\r\n    gameOver = true;\r\n    checkForEndOfGame();\r\n    showStatus();\r\n})\r\n\r\nfunction checkForEndOfGame(){\r\n\r\n\r\n    updateScores();\r\n\r\n    if(gameOver){\r\n        while(dealerScore < playerScore\r\n        && playerScore <= 21\r\n        && dealerScore <= 21){\r\n            dealerCards.push(getNextCard());\r\n            updateScores();\r\n        }\r\n    }\r\n\r\n    if(playerScore > 21){\r\n        playerWon = false;\r\n        gameOver = true;\r\n    }else if (dealerScore > 21){\r\n        playerWon = true;\r\n        gameOver = true;\r\n    }else if  (gameOver){\r\n\r\n        if(playerScore > dealerScore){\r\n            playerWon = true;\r\n        }else{\r\n            playerWon = false;\r\n        }\r\n    }\r\n}\r\n\r\nlet suits = ['Hearts', 'Clubs', 'Diamonds', 'Spades'];\r\nlet values = ['As', 'King', 'Queen', 'Jack',\r\n    'Ten', 'Nine', 'Eight', 'Seven', 'Six',\r\n    'Five', 'Four', 'Three', 'Two'\r\n]\r\n\r\n\r\n\r\nfunction createDeck() {\r\n    let deck = [];\r\n    for (suitIndex = 0; suitIndex < suits.length; suitIndex++) {\r\n        for (let valueIndex = 0; valueIndex < values.length; valueIndex++) {\r\n            let card = {\r\n                suit: suits[suitIndex],\r\n                value: values[valueIndex]\r\n            };\r\n            deck.push(card);\r\n        }\r\n    }\r\n    return deck;\r\n}\r\n\r\n\r\n\r\nfunction getNextCard() {\r\n    return deck.shift();\r\n}\r\n\r\nfunction getCardString(card) {\r\n    return card.value + ' of ' + card.suit;\r\n}\r\n\r\nfunction updateScores(){\r\n    dealerScore = getScore(dealerCards);\r\n    playerScore = getScore(playerCards);\r\n}\r\n\r\nfunction getScore(cardArray){\r\n    let score = 0;\r\n    let hasAce = false;\r\n    for (let i = 0; i < cardArray.length; i++){\r\n        let card = cardArray[i];\r\n        score += getCardNumericValue(card);\r\n        if(card.value === 'Ace'){\r\n            hasAce = true;\r\n        }\r\n    }\r\n    if(hasAce && score + 10 <= 21){\r\n        return score + 10;\r\n    }\r\n    return score;\r\n}\r\n\r\nfunction getCardNumericValue(card){\r\n    switch(card.value){\r\n        case 'Ace':\r\n            return 1;\r\n        case 'Two':\r\n            return 2;\r\n        case 'Three':\r\n            return 3;\r\n        case 'Four':\r\n            return 4;\r\n        case 'Five':\r\n            return 5;\r\n        case 'Six':\r\n            return 6;\r\n        case 'Seven':\r\n            return 7;\r\n        case 'Eight':\r\n            return 8;\r\n        case 'Nine':\r\n            return 9;\r\n        default:\r\n            return 10;\r\n    }\r\n\r\n}\r\n\r\nfunction showStatus() {\r\n    if (!gameStarted) {\r\n        textArea.innerText = 'Welcome to BlackJack!!!!!!!!!!';\r\n        return;\r\n    }\r\n    let dealerCardString = '';\r\n    for(let i=0; i<dealerCards.length; i++){\r\n        dealerCardString += getCardString(dealerCards[i]) + '\\n';\r\n    }\r\n\r\n    let playerCardString = '';\r\n    for (let i = 0; i<playerCards.length; i++){\r\n        playerCardString += getCardString(playerCards[i]) + '\\n';\r\n    }\r\n\r\n    updateScores();\r\n\r\n    textArea.innerText =\r\n        'Dealer has:\\n' +\r\n        dealerCardString +\r\n        '(score: ' + dealerScore + ')\\n\\n' +\r\n\r\n        'Player has:\\n' +\r\n        playerCardString +\r\n        '(score: ' + playerScore + ')\\n\\n';\r\n\r\n    if(gameOver){\r\n        if(playerWon){\r\n            textArea.innerText += 'YOU WIN';\r\n        }else{\r\n            textArea.innerText += 'DEALER WINS';\r\n        }\r\n        newGameButton.style.display = 'inline';\r\n        hitButton.style.display = 'none';\r\n        stayButton.style.display = 'none';\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction shuffleDeck(deck) {\r\n    for (let i = 0; i < deck.length; i++) {\r\n        let swapIndex = Math.trunc(Math.random() * deck.length);\r\n        let randomCard = deck[swapIndex];\r\n        let currentCard = deck[i];\r\n        deck[swapIndex] = currentCard;\r\n        deck[i] = randomCard;\r\n    }\r\n}"]}